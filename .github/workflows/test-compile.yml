name: tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  install-script:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install xre
        run: ./install.sh

      - name: Try xre
        run: xre -v

  syntax:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sparse
        run: sudo apt-get install sparse

      - name: Install clang-format
        run: sudo apt-get install clang-format

      - name: Run clang-format
        working-directory: ./engine
        run: >
          clang-format \
            --dry-run  \
            --Werror   \
            $(find . -name "*.c" -not -path "*/unit-tests/*")

      - name: Run sparse
        working-directory: ./engine
        run: >
          sparse           \
            -Wno-decl      \
            -Wsparse-error \
            -I ./incs      \
            $(find . -name "*.c" -not -path "*/unit-tests/*")

  # tester-valgrind:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Build xre (debug)
  #       run: make

  #     - name: Run tester.sh
  #       working-directory: __tools__/tester
  #       run: >
  #         chmod +x run
  #         && mv ../../xre .
  #         && chmod +x xre
  #         && ./run

  # tester-asan:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Install timeout
  #       run: brew install coreutils

  #     - name: Build xre (debug)
  #       run: make g

  #     - name: Run tester.sh
  #       working-directory: __tools__/tester
  #       run: >
  #         chmod +x run
  #         && mv ../../xre .
  #         && chmod +x xre
  #         && ./run
