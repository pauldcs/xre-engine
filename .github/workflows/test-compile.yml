name: tests

on:
  push:
    branches:
      - main
      - release
      - develop

jobs:
  install-script:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install xre
        run: ./__scripts__/install.sh

      - name: Try xre
        run: xre -h

  syntax:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install sparse

      - name: Run sparse
        run: >
          sparse      \
            -Wno-decl \
            -Wsparse-error \
            -I ./incs \
            $(find . -name "*.c" -not -path "*/unit-tests/*")

  tester:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install timeout
        if: matrix.os == 'macos-latest'
        run: brew install coreutils

      - name: Build xre (debug)
        run: make g

      - name: Run tester.sh
        working-directory: __tools__/tester
        run: >
          chmod +x run
          && mv ../../xre .
          && chmod +x xre
          && ./run

  valgrind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Valgrind
        run: sudo apt-get install valgrind

      - name: Build xre
        run: make

      - name: Run Valgrind
        run: >
          valgrind                \
            --leak-check=full     \
            --track-origins=yes   \
            --show-leak-kinds=all \
            --track-fds=yes       \
            --error-exitcode=1    \
            ./xre ./__tools__/tester/infiles/programs/prime_numbers.in

  array:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure specs
        working-directory: srcs/core/array
        run: >
          chmod +x configure
          && ./configure specs "*"
          && ./tester
