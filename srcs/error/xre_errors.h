#ifndef __XRE_REPL_ERROR_H__
#define __XRE_REPL_ERROR_H__

#include "xre_parse.h"

typedef enum {
  XRE_ARITHMETIC_ERROR,
  XRE_IMPORT_ERROR,
  XRE_LOOKUP_ERROR,
  XRE_INDENTIFIER_ERROR,
  XRE_OS_ERROR,
  XRE_RUNTIME_ERROR,
  XRE_INTERNAL_ERROR,
  XRE_MEMORY_ERROR,
  XRE_SYNTAX_ERROR,
  XRE_EXIT_ERROR,
  XRE_TYPE_ERROR,
  XRE_VALUE_ERROR,
} t_xre_error_type;

typedef enum {
  XRE_MODULE_NOT_FOUND_ERROR,
  XRE_INVALID_MODULE_ERROR,
  XRE_ASSERTION_ERROR,
  XRE_CONFUSING_CONDITION,
  XRE_ALLOCATION_ERROR,
  XRE_NEGATIVE_SHIFT_ERROR,
  XRE_EXCEEDS_SHIFT_LIMIT_ERROR,
  XRE_NOT_TERMINATED_ERROR,
  XRE_EXIT_CALLED_ERROR,
  XRE_INDEX_ERROR,
  XRE_UNBOUND_LOCAL_ERROR,
  XRE_UNINITIALIZED_LOCAL_ERROR,
  XRE_NOT_IMPLEMENTED_ERROR,
  XRE_OVERFLOW_ERROR,
  XRE_INVALID_TYPE_FOR_OPERAND,
  XRE_TYPE_MISSMATCH_ERROR,
  XRE_UNDERFLOW_ERROR,
  XRE_ZERO_DIVISION_ERROR,
  XRE_BROKEN_PIPE_ERROR,
  XRE_FILE_EXISTS_ERROR,
  XRE_FILE_NOT_FOUND_ERROR,
  XRE_IS_A_DIRECTORY_ERROR,
  XRE_NOT_A_DIRECTORY_ERROR,
  XRE_PERMISSION_ERROR,
  XRE_INTERRUPTED_ERROR,
  XRE_TIMEOUT_ERROR,
  XRE_IO_ERROR,
  XRE_INVALID_ASSIGMENT_ERROR,
  XRE_UNTERMINATED_STRING_ERROR,
  XRE_UNEXPECTED_OPERATOR,
  XRE_UNEXPECTED_OPERAND,
  XRE_UNMATCHED_PARENTHESIS
} t_xre_error_subtype;

typedef enum {
  XRE_MEMORY_WARNING,
  XRE_INDENTIFIER_WARNING,
  XRE_SYNTAX_WARNING,
  XRE_TYPE_WARNING,
} t_xre_warning_type;

typedef enum {
  XRE_CHAINED_COMPARISON_WARNING,
  XRE_CONVERSION_WARNING,
  XXR_STRING_TO_ARRAY_WARNING,
  array_TO_STRING_WARNING,

} t_xre_warning_subtype;

typedef struct {
  struct {
    t_xre_error_type type;
    t_xre_error_subtype subtype;
  } error;
  const t_xre_token *src;
} t_xre_error;

const char *err_type_to_string(t_xre_error_type type);
const char *err_subtype_to_string(t_xre_error_subtype type);
void xre_error(t_xre_error *report,const t_xre_token *token);

#endif /* __XRE_REPL_ERROR_H__ */
